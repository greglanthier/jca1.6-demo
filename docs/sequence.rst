Diagrams
========

The exchange of messages between the JEE container and a JEE Resource Adapter (RA) can seen
complex at first glance.

Building on ideas inspired from a `blog post <https://itdevworld.wordpress.com/2008/09/17/connection-request-flow-on-outbound-jca-connector/>`_ written by `Rafael Ribeiro <https://itdevworld.wordpress.com/author/rafaelri/>`_ 
I'll try to gradually distill the JEE Container / RA / Application exchanges in simplified diagrams
generated by an excellent open source diagraming tool called `PlantUML <http://plantuml.com/index.html>`_.

RA State Transitions
--------------------

Understanding all of the message exchanges with JCA Resource Adapters is complicated by the fact that a
resource adapter transitions through several states during its lifecycle, and each state can consist of
several exchanges between the container and the RA as well as between the application and the RA.

The purpose of some of the APIs in the interfaces will also be easier to explain if we decompose
the RA lifecycle into discrete states.

The following diagram represents the state transitions a resource adapter makes as it is loaded, used,
and unloaded by an active JEE container.

.. uml::	
	@startuml
	scale 3/3
	
	[*] -d-> undeployed

	undeployed -r-> deploying
	deploying -r-> deployed
	deployed -r-> undeploying
	undeploying -d-> undeployed

	undeployed --> [*]

	@enduml

Deployment
----------

.. uml::
	scale 2/3
	hide footbox
	participant "JEE Container" as container
	participant "<<Interface>>\njavax.resource.spi\nResourceAdapter" as ra
	
	... Container Startup ...

	container -> ra: start
	activate ra

	group If the RA handles inbound connections
	... An MDB is deployed to the container ...
	container -> ra: endpointActivation
	... An MDB is removed from the container ...
	container -> ra: endpointDeactivation
	end

	... Container Shutdown\n or RA re-deployment ...
	
	container -> ra: stop
	deactivate ra

Running
-------

.. uml::

	scale 2/3
	hide footbox
	actor Servlet
	boundary ConnectonFactory
	entity Container
	entity ManagedConnectionFactory
	entity ManagedConnection

	== container startup ==
	activate Container
	Container -> ManagedConnectionFactory: createConnectionFactory

	activate ManagedConnectionFactory

	ManagedConnectionFactory -> ConnectonFactory
	activate ConnectonFactory

	== normal op ==

	Servlet -> ConnectonFactory: getConnection
	ConnectonFactory -> ManagedConnectionFactory: createManagedConnection
	ManagedConnectionFactory -> ManagedConnection
	activate ManagedConnection
	Container -> ManagedConnection: addConnectionEventListener

This is some text
	
	[INFO    ] org.greglanthier.echo.ManagedConnectionFactoryImpl@492f0ec3#createConnectionFactory( [ConnectionManager]@7bedccdd
	JNDI Name <eis/echo>
	shareable <true>
	 )
	[INFO    ] org.greglanthier.echo.EchoConnectionFactoryImpl@1d65250( org.greglanthier.echo.ManagedConnectionFactoryImpl@492f0ec3, [ConnectionManager]@7bedccdd
	JNDI Name <eis/echo>
	shareable <true>
	 )
	[INFO    ] SRVE0242I: [ws] [/ws] [org.example.ws.MyServlet]: Initialization successful.
	[INFO    ] org.greglanthier.echo.EchoConnectionFactoryImpl@1d65250#getConnection()
	[INFO    ] org.greglanthier.echo.ManagedConnectionFactoryImpl@492f0ec3#createManagedConnection( null, null )
	[INFO    ] org.greglanthier.echo.EchoManagedConnectionImpl@668ce670#addConnectionEventListener( com.ibm.ejs.j2c.ConnectionEventListener@2c6cf7a9 )
	[INFO    ] org.greglanthier.echo.ManagedConnectionFactoryImpl@492f0ec3#matchManagedConnection( [org.greglanthier.echo.EchoManagedConnectionImpl@668ce670], null, null ): null
	[INFO    ] org.greglanthier.echo.ManagedConnectionFactoryImpl@492f0ec3#createManagedConnection( null, null )
	[INFO    ] org.greglanthier.echo.EchoManagedConnectionImpl@6a23f3c7#addConnectionEventListener( com.ibm.ejs.j2c.ConnectionEventListener@5e59c441 )
	[INFO    ] org.greglanthier.echo.EchoManagedConnectionImpl@668ce670#getConnection
	[INFO    ] org.greglanthier.echo.EchoConnection@1b9575e6( org.greglanthier.echo.EchoManagedConnectionImpl@668ce670 )
	[INFO    ] org.greglanthier.echo.EchoConnection@1b9575e6#close()
	[INFO    ] org.greglanthier.echo.EchoManagedConnectionImpl@668ce670#cleanup()
	